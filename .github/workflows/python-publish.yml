# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches: 
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        # https://github.com/actions/python-versions/blob/main/versions-manifest.json
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: Install Poetry and dependencies
      shell: bash
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        set -e
        curl -sSL https://install.python-poetry.org | python3 -
        poetry install --all-extras
        poetry self add "poetry-dynamic-versioning[plugin]"
    - name: Lint with flake8
      run: |
        set -e
        poetry run flake8 pythereum --show-source --statistics --count
    - name: Build package
      run: |
        set -e
        poetry build
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
